<Project>
  <!-- The 'Microsoft.NET.Sdk' does not currently support UAP, therefore we have to manually replicate what a UWP project does. -->
  <!-- In VS this is done via the 'ImplicitlyExpandTargetPlatform' target... -->
  <!-- https://devdiv.visualstudio.com/DevDiv/_git/VS?path=%2Fsrc%2Fvsproject%2FXamlCompiler%2FTargets%2FMicrosoft.Windows.UI.Xaml.Common.targets&version=GBmaster -->
  <PropertyGroup>
    <_targetFrameworkIdentifier>$(TargetFramework.TrimEnd('.0123456789'))</_targetFrameworkIdentifier>
    <_targetFrameworkVersion>$(TargetFramework.Substring($(_targetFrameworkIdentifier.Length)))</_targetFrameworkVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(_targetFrameworkIdentifier)' == 'uap'">
    <TargetFrameworkIdentifier>.NETCore</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v5.0</TargetFrameworkVersion>
    <TargetPlatformIdentifier>UAP</TargetPlatformIdentifier>

    <!-- derive platform settings from TFM -->
    <TargetPlatformVersion Condition="'$(TargetPlatformVersion)' == '' AND '$(_targetFrameworkVersion)' == '10.0'">10.0.17763.0</TargetPlatformVersion>
    <TargetPlatformVersion Condition="'$(TargetPlatformVersion)' == ''">$([System.Version]::Parse('$(_targetFrameworkVersion)')).0</TargetPlatformVersion>
    <TargetPlatformMinVersion Condition="'$(TargetPlatformMinVersion)' == '' AND '$(_targetFrameworkVersion)' == '10.0'">10.0.15063.0</TargetPlatformMinVersion>
    <TargetPlatformMinVersion Condition="'$(TargetPlatformMinVersion)' == ''">$([System.Version]::Parse('$(_targetFrameworkVersion)')).0</TargetPlatformMinVersion>

    <NoStdLib>true</NoStdLib>
    <TargetsUAP>true</TargetsUAP>
    <UwpPackageVersion>6.2.8</UwpPackageVersion>
  </PropertyGroup>

</Project>
