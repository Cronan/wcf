<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyName>System.Private.ServiceModel</AssemblyName>
    <RootNamespace>System.ServiceModel</RootNamespace>
    <TargetFramework>netstandard2.0</TargetFramework>
    <OutputType>Library</OutputType>
    <NoWarn>$(NoWarn);1634;1691;649</NoWarn>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <FileAlignment>512</FileAlignment>
    <DebugSymbols>true</DebugSymbols>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <CLSCompliant>true</CLSCompliant>
    <RuntimeIdentifier>$(TargetGroup)</RuntimeIdentifier>
  </PropertyGroup>

  <!-- [todo:arcade] Added this because our released S.P.SM package includes the "_BlockReflectionAttribute" but it is included not only in the UAP* assembly but also the other shipped assembly, should this only be in the binary built for uap? -->
  <!--
      Defining __BlockReflectionAttribute indicates that the .NET Native toolchain should remove the metadata for all non-public APIs.
      This reduces size and disables private reflection on those APIs.
      The attribute can also be applied to individual public APIs to similarly block them.
   -->
  <PropertyGroup>
    <!-- [todo:arcade] Decide how to condition this property. -->
    <BlockReflectionAttribute>true</BlockReflectionAttribute>
    <!--
    <BlockReflectionAttribute Condition="'$(BlockReflectionAttribute)' == '' and '$(UWPCompatible)' == 'true' and '$(IsTestProject)' != 'true'">true</BlockReflectionAttribute>
    <BlockReflectionAttribute Condition="'$(MSBuildProjectExtension)' != '.csproj'">false</BlockReflectionAttribute>
    -->
    <!-- For debug builds we include the full value string so that we get actual resources, even in the case the toolchain strips the resources file -->
    <GenerateResxSourceIncludeDefaultValues Condition="'$(ConfigurationGroup)' == 'Debug'">true</GenerateResxSourceIncludeDefaultValues>
  </PropertyGroup>

  <ItemGroup Condition="'$(BlockReflectionAttribute)'=='true'">
    <Compile Include="..\..\..\eng\BlockReflectionAttribute.cs" />
  </ItemGroup>

  <PropertyGroup Condition="'$(TargetGroup)' == 'uap'">
    <DefineConstants>$(DefineConstants);FEATURE_NETNATIVE</DefineConstants>

    <!-- Temporarily Override restore moniker since corefx's targeting pack still uses uap10.1 moniker -->
    <!--<NuGetTargetMoniker>UAP,Version=v10.1</NuGetTargetMoniker>
    <NuGetTargetMonikerShort>uap10.1</NuGetTargetMonikerShort>-->
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetGroup)' != 'uap'">
    <DefineConstants>$(DefineConstants);FEATURE_CORECLR</DefineConstants>
  </PropertyGroup>

  <!--This constant does not appear to be getting used anywhere.-->
  <PropertyGroup Condition="'$(TargetsWindows)'=='true'">
    <DefineConstants>$(DefineConstants);TARGETS_WINDOWS</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Reflection.DispatchProxy"
                      Version="$(SystemReflectionDispatchProxyPackageVersion)" />
    <PackageReference Include="System.Security.Principal.Windows"
                      Version="$(SystemSecurityPrincipalWindowsPackageVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetGroup)' == 'uap'">
    <PackageReference Include="Microsoft.Private.CoreFx.UAP"
                      Version="$(MicrosoftPrivateCoreFxUAPPackageVersion)" />
    <!--<Reference Include="mscorlib" />
    <Reference Include="Microsoft.Win32.Primitives" />
    <Reference Include="System.Collections" />
    <Reference Include="System.Collections.Concurrent" />
    <Reference Include="System.Collections.NonGeneric" />
    <Reference Include="System.Collections.Specialized" />
    <Reference Include="System.ComponentModel.EventBasedAsync" />
    <Reference Include="System.ComponentModel.Primitives" />
    <Reference Include="System.ComponentModel.TypeConverter" />
    <Reference Include="System.Diagnostics.Contracts" />
    <Reference Include="System.Diagnostics.Debug" />
    <Reference Include="System.Diagnostics.Tools" />
    <Reference Include="System.Diagnostics.Tracing" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.Linq" />
    <Reference Include="System.Linq.Expressions" />
    <Reference Include="System.Linq.Queryable" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Net.NameResolution" />
    <Reference Include="System.Net.Primitives" />
    <Reference Include="System.Net.Security" />
    <Reference Include="System.Net.Sockets" />
    <Reference Include="System.Net.WebHeaderCollection" />
    <Reference Include="System.Net.WebProxy" />
    <Reference Include="System.Net.WebSockets" />
    <Reference Include="System.Net.WebSockets.Client" />
    <Reference Include="System.ObjectModel" />
    <Reference Include="System.Resources.ResourceManager" />
    <Reference Include="System.Runtime" />
    <Reference Include="System.Runtime.Extensions" />
    <Reference Include="System.Runtime.InteropServices" />
    <Reference Include="System.Runtime.InteropServices.RuntimeInformation" />
    <Reference Include="System.Runtime.Serialization.Primitives" />
    <Reference Include="System.Runtime.Serialization.Xml" />
    <Reference Include="System.Runtime.WindowsRuntime" />
    <Reference Include="System.Security.Claims" />
    <Reference Include="System.Security.Cryptography.Algorithms" />
    <Reference Include="System.Security.Cryptography.Encoding" />
    <Reference Include="System.Security.Cryptography.Primitives" />
    <Reference Include="System.Security.Cryptography.X509Certificates" />
    <Reference Include="System.Security.Principal" />
    <Reference Include="System.Text.Encoding.Extensions" />
    <Reference Include="System.Threading" />
    <Reference Include="System.Threading.Tasks" />
    <Reference Include="System.Threading.Timer" />
    <Reference Include="System.Xml.ReaderWriter" />
    <Reference Include="System.Xml.XmlSerializer" />
    <Reference Include="Windows" />-->
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\..\Common\src\System\NotImplemented.cs">
      <Link>Common\System\NotImplemented.cs</Link>
    </Compile>
    <Compile Include="..\..\Common\src\System\__HResults.cs">
      <Link>Common\System\__HResults.cs</Link>
    </Compile>
    <Compile Include="..\..\Common\src\System\SR.cs">
      <Link>Common\System\SR.cs</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetGroup)' == 'uap'">
    <EmbeddedResource Include="$(MsBuildThisFileDirectory)Resources\$(AssemblyName).rd.xml" />
    <TargetingPackReference Include="Windows" />
  </ItemGroup>
  
  <!--<ItemGroup Condition="'$(TargetGroup)' == 'netstandard2.0'">
    -->
  <!-- Copy ref to output to enable APICompat for the facades that directly reference this project -->
  <!--
    <Content Include="$(PackagesDir)NETStandard.Library\2.0.0-$(StandardExpectedPrerelease)\build\netstandard2.0\ref\netstandard.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>-->
</Project>

