<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyName>System.Private.ServiceModel</AssemblyName>
    <RootNamespace>System.ServiceModel</RootNamespace>
    <!-- https://docs.microsoft.com/en-us/nuget/reference/target-frameworks -->
    <TargetFrameworks>netstandard2.0;uap10.0.16299</TargetFrameworks>
    <OutputType>Library</OutputType>
    <NoWarn>$(NoWarn);1634;1691;649</NoWarn>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <FileAlignment>512</FileAlignment>
    <DebugSymbols>true</DebugSymbols>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <CLSCompliant>true</CLSCompliant>
    <IsImplementationAssembly>true</IsImplementationAssembly>
    <!--<RuntimeIdentifier>$(TargetGroup)</RuntimeIdentifier>-->
  </PropertyGroup>

  <!-- [todo:arcade] Added this because our released S.P.SM package includes the "_BlockReflectionAttribute" but it is included not only in the UAP* assembly but also the other shipped assembly, should this only be in the binary built for uap? -->
  <!--
      Defining __BlockReflectionAttribute indicates that the .NET Native toolchain should remove the metadata for all non-public APIs.
      This reduces size and disables private reflection on those APIs.
      The attribute can also be applied to individual public APIs to similarly block them.
   -->
  <PropertyGroup>
    <!-- [todo:arcade] Decide how to condition this property. -->
    <BlockReflectionAttribute>true</BlockReflectionAttribute>
    <!--
    <BlockReflectionAttribute Condition="'$(BlockReflectionAttribute)' == '' and '$(UWPCompatible)' == 'true' and '$(IsTestProject)' != 'true'">true</BlockReflectionAttribute>
    <BlockReflectionAttribute Condition="'$(MSBuildProjectExtension)' != '.csproj'">false</BlockReflectionAttribute>
    -->
    <!-- For debug builds we include the full value string so that we get actual resources, even in the case the toolchain strips the resources file -->
    <GenerateResxSourceIncludeDefaultValues Condition="'$(ConfigurationGroup)' == 'Debug'">true</GenerateResxSourceIncludeDefaultValues>
  </PropertyGroup>

  <ItemGroup Condition="'$(BlockReflectionAttribute)'=='true'">
    <Compile Include="..\..\..\eng\BlockReflectionAttribute.cs" />
  </ItemGroup>

  <PropertyGroup Condition="$(TargetFramework.StartsWith('uap'))">
    <DefineConstants>$(DefineConstants);FEATURE_NETNATIVE</DefineConstants>
    <TargetFrameworkIdentifier>uap</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>10.0.16299</TargetFrameworkVersion>
  </PropertyGroup>
  
  <PropertyGroup Condition="$(TargetFramework.StartsWith('netstandard'))">
    <DefineConstants>$(DefineConstants);FEATURE_CORECLR</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Reflection.DispatchProxy"
                      Version="$(SystemReflectionDispatchProxyPackageVersion)" />
    <PackageReference Include="System.Security.Principal.Windows"
                      Version="$(SystemSecurityPrincipalWindowsPackageVersion)" />
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('uap'))">
    <PackageReference Include="Microsoft.NETCore.UniversalWindowsPlatform"
                      Version="$(UwpPackageVersion)" />
    <!-- [todo:arcade] Understand why we need this private package only available in MyGet. -->
    <PackageReference Include="Microsoft.TargetingPack.Private.WinRT"
                      Version="1.0.3" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\..\Common\src\System\NotImplemented.cs">
      <Link>Common\System\NotImplemented.cs</Link>
    </Compile>
    <Compile Include="..\..\Common\src\System\__HResults.cs">
      <Link>Common\System\__HResults.cs</Link>
    </Compile>
    <Compile Include="..\..\Common\src\System\SR.cs">
      <Link>Common\System\SR.cs</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('uap'))">
    <EmbeddedResource Include="$(MsBuildThisFileDirectory)Resources\$(AssemblyName).rd.xml" >
        <GenerateSource>False</GenerateSource>
        <ManifestResourceName>$(AssemblyName).rd.xml</ManifestResourceName>
    </EmbeddedResource>
    <TargetingPackReference Include="Windows" />
  </ItemGroup>

  <!--<ItemGroup Condition="'$(TargetGroup)' == 'netstandard2.0'">
    -->
  <!-- Copy ref to output to enable APICompat for the facades that directly reference this project -->
  <!--
    <Content Include="$(PackagesDir)NETStandard.Library\2.0.0-$(StandardExpectedPrerelease)\build\netstandard2.0\ref\netstandard.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>-->
</Project>

